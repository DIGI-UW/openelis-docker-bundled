name: Build OpenELIS-Global-2  Docker Images

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/openelis-global-2   
    
jobs:
    build-and-push-image-backend:
      if: ${{ github.repository == 'DIGI-UW/openelis-docker-bundled' }}
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            submodules: recursive

          # Add support for more platforms with QEMU (optional)
          # https://github.com/docker/setup-qemu-action
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ${{ env.IMAGE_NAME }}-bundled

        - name: Build and push Docker image
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./docker/openelis/Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            build-args: SKIP_SPOTLESS=true

    build-and-push-image-db:
      if: ${{ github.repository == 'DIGI-UW/openelis-docker-bundled' }}
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            submodules: recursive

          # Add support for more platforms with QEMU (optional)
          # https://github.com/docker/setup-qemu-action
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ${{ env.IMAGE_NAME }}-db-bundled

        - name: Build and push Docker image
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./docker/db/Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}        

    build-and-push-image-proxy:
        if: ${{ github.repository == 'DIGI-UW/openelis-docker-bundled' }}
        runs-on: ubuntu-latest
        permissions:
          contents: read
          packages: write

        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
              submodules: recursive

            # Add support for more platforms with QEMU (optional)
            # https://github.com/docker/setup-qemu-action
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Login to DockerHub
            uses: docker/login-action@v3
            with:
              registry: ${{ env.REGISTRY }}
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Extract metadata (tags, labels) for Docker
            id: meta
            uses: docker/metadata-action@v5
            with:
              images: ${{ env.IMAGE_NAME }}-proxy-bundled

          - name: Build and push Docker image
            uses: docker/build-push-action@v5
            with:
              context: .
              file: ./docker/proxy/Dockerfile
              push: true
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}
              build-args: SKIP_SPOTLESS=true                 
  